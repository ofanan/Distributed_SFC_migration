#include "Chain.h"

#ifndef SETS_OF_CHAINS
#define SETS_OF_CHAINS

class Chain;

struct sortTwoChainsByCpuUsage {
	bool operator () (const Chain& lhs, const Chain& rhs) const {
		return lhs.getCpu () >= rhs.getCpu ();
	
/*		if (lhs.curLvl==-1 || rhs.curLvl==-1) { // if either lhs, or rhs, is unplaced, arbitrarily return false*/
/*			return false;*/
/*		}*/
/*	  return ((lhs.isRT_Chain)? RT_Chain::mu_u[lhs.curLvl] : Non_RT_Chain::mu_u[lhs.curLvl]) <*/
/*			  	 ((rhs.isRT_Chain)? RT_Chain::mu_u[rhs.curLvl] : Non_RT_Chain::mu_u[rhs.curLvl]);*/
	} 
};

typedef unordered_set <Chain, ChainHash> 		 UnorderedSetOfChains;
typedef set <Chain, sortTwoChainsByCpuUsage> SetOfChainsOrderedByCpuUsage; 

#endif
