//
// Generated file, do not edit! Created by nedtool 5.6 from PlacementInfoMsg.msg.
//

#ifndef __PLACEMENTINFOMSG_M_H
#define __PLACEMENTINFOMSG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#pragma once
// }}

/**
 * Class generated from <tt>PlacementInfoMsg.msg:10</tt> by nedtool.
 * <pre>
 * message PlacementInfoMsg
 * {
 *     uint32_t newlyPlacedChainsIds[]; // A list of chains that the sending datacenter has just placed.
 * }
 * </pre>
 */
class PlacementInfoMsg : public ::omnetpp::cMessage
{
  protected:
    uint32_t *newlyPlacedChainsIds; // array ptr
    unsigned int newlyPlacedChainsIds_arraysize;

  private:
    void copy(const PlacementInfoMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const PlacementInfoMsg&);

  public:
    PlacementInfoMsg(const char *name=nullptr, short kind=0);
    PlacementInfoMsg(const PlacementInfoMsg& other);
    virtual ~PlacementInfoMsg();
    PlacementInfoMsg& operator=(const PlacementInfoMsg& other);
    virtual PlacementInfoMsg *dup() const override {return new PlacementInfoMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual void setNewlyPlacedChainsIdsArraySize(unsigned int size);
    virtual unsigned int getNewlyPlacedChainsIdsArraySize() const;
    virtual uint32_t getNewlyPlacedChainsIds(unsigned int k) const;
    virtual void setNewlyPlacedChainsIds(unsigned int k, uint32_t newlyPlacedChainsIds);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const PlacementInfoMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, PlacementInfoMsg& obj) {obj.parsimUnpack(b);}


#endif // ifndef __PLACEMENTINFOMSG_M_H

