//
// Generated file, do not edit! Created by nedtool 5.6 from src/LeftChainsMsg.msg.
//

#ifndef __LEFTCHAINSMSG_M_H
#define __LEFTCHAINSMSG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#pragma once
#include "Chain.h"
// }}

/**
 * Class generated from <tt>src/LeftChainsMsg.msg:11</tt> by nedtool.
 * <pre>
 * message LeftChainsMsg
 * {
 *     int32_t leftChains[];
 * }
 * </pre>
 */
class LeftChainsMsg : public ::omnetpp::cMessage
{
  protected:
    int32_t *leftChains; // array ptr
    unsigned int leftChains_arraysize;

  private:
    void copy(const LeftChainsMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const LeftChainsMsg&);

  public:
    LeftChainsMsg(const char *name=nullptr, short kind=0);
    LeftChainsMsg(const LeftChainsMsg& other);
    virtual ~LeftChainsMsg();
    LeftChainsMsg& operator=(const LeftChainsMsg& other);
    virtual LeftChainsMsg *dup() const override {return new LeftChainsMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual void setLeftChainsArraySize(unsigned int size);
    virtual unsigned int getLeftChainsArraySize() const;
    virtual int32_t getLeftChains(unsigned int k) const;
    virtual void setLeftChains(unsigned int k, int32_t leftChains);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const LeftChainsMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, LeftChainsMsg& obj) {obj.parsimUnpack(b);}


#endif // ifndef __LEFTCHAINSMSG_M_H

