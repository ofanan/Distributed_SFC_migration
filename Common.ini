# This is the main configuartion file, with parameters relevant to all simulated scenarios.

[General]
#debug-on-errors = true
#debugger-attach-on-error = true
#debugger-attach-on-startup = true

**.basicDatarate = 1Mbps 
**.channelDelay  = 1ms
# Estimated lowest values for cpuAleaf at asyncBlk:
# Lux: 0.1 : 110, 0.2 : 110, 0.3 : 110, 0.4 : 110, 0.5 : 110, 0.6 : 115, 0.7 : 115, 0.8 : 135, 0.9 : 155, 1.0, 160

# Monaco: 0.1 : 845, 0.2 : 845, 0.3 : 845, 0.4 : 950, 0.5 : 1080, 0.6 : 1200, 0.7 : 1400, 0.8 : 1700, 0.9 : 1900, 1.0 : 2100
**.sim_controller.cpuAtLeaf = ${838..844 step 1} # 150, 160, 169, 179, 188, 197, 207} #${1260, 1680, 2100}
**.sim_controller.seed 		  = ${2..10 step 1} #random' is used only for deciding whether a new chain is RT. If seed==-1, use pseudo-random', based on the chainId.
**.sim_controller.RtProb    = ${0..0.1 step 0.1} #Prob' that a new chain is RT

# Pkt size
**.manuallySetPktSize 								= true
**.sim_controller.bitLenOfHdr 	   		= 80

**.sim_controller.syncMode 						= false
**.sim_controller.simLenInSec 				= 99999
**.sim_controller.manuallySetPktSize 	= true
**.sim_controller.runningRtProbSim 		= true
**.sim_controller.logDelays 					= false
**.sim_controller.logComOh  					= false
**.sim_controller.allowBlkChain  	  	= true #when true, the placement alg' can block new chains, rather than failing.

**.sim_controller.BU_ACCUM_DELAY_OF_LVL1   = 0.0005
**.sim_controller.RESH_ACCUM_DELAY_OF_LVL1 = 0.0012
**.sim_controller.beginVeryDetailedLogAtTraceTime = 999999
**.sim_controller.LOG_LVL = 0
**.sim_controller.RES_LVL = 0
**.sim_controller.DEBUG_LVL = 2

