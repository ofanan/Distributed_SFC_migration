# This is the main configuartion file, with parameters relevant to all simulated scenarios.

[General]
#debug-on-errors = true
#debugger-attach-on-error = true
#debugger-attach-on-startup = true

**.basicDatarate 			= 10Mbps 
**.channelDelay  		 	= 1ms 	# for non-city scenarios (e.g., tree)
**.LuxChannelDelay  	= 22us  
**.MonacoChannelDelay = 8us

# Estimated lowest values for cpuAleaf at asyncBlk:
	# Lux: 0.1 : 110, 0.2 : 110, 0.3 : 110, 0.4 : 110, 0.5 : 110, 0.6 : 115, 0.7 : 115, 0.8 : 135, 0.9 : 155, 1.0, 160
	# Monaco: 0.1 : 1000, 0.2 : 1000, 0.3 : 1000, 0.4 : 950, 0.5 : 1080, 0.6 : 1200, 0.7 : 1400, 0.8 : 1700, 0.9 : 1900, 1.0 : 2100

# Monaco minCpu at leaf for feasible sol by opt (LBound):
# {840, 924, 1008, 1092, 1176, 1260, 1344, 1428, 1512, 1596, 1680, 1764, 1848, 1932, 2016, 2100, 2192}
# Lux minCpu at leaf for feasible sol by opt (LBound):
# {89, 98, 107, 116, 127, 134, 142, 151, 160, 169, 178, 187, 196, 205, 214, 222}
**.sim_controller.cpuAtLeaf = ${205} #${98, 107, 116, 127, 134, 142, 151, 160, 169, 178, 187, 196, 205, 214, 222}
#{924, 1008, 1092, 1176, 1260, 1344, 1428, 1512, 1596, 1680, 1764, 1848, 1932, 2016, 2100, 2192}
**.sim_controller.seed 		  = ${1..1 step 1} #random' is used only for deciding whether a new chain is RT. If seed==-1, use pseudo-random', based on the chainId.
**.sim_controller.RtProb    = ${0.1..0.1 step 0.1} #Prob' that a new chain is RT

# Pkt size
**.manuallySetPktSize 								= true
**.sim_controller.syncMode 						= false 
**.sim_controller.simLenInSec 				= 99999
**.sim_controller.manuallySetPktSize 	= true  # when true, dictate to Omnet the pkt sizes based on a rigorous counting of the # of bits in each field
**.sim_controller.runningRtProbSim 		= false # when true, running a sim' where the prob' of a request to be RT varies
**.sim_controller.logDelays 					= false # when true, log the delays
**.sim_controller.logComOh  					= true  # when true, log the communication overhead
**.sim_controller.allowBlkChain  	  	= false #when true, the placement alg' can block new chains, rather than failing.

**.sim_controller.BU_ACCUM_DELAY_OF_LVL0   = 0.0001
**.sim_controller.RESH_ACCUM_DELAY_OF_LVL0 = 0.0004
**.sim_controller.beginVeryDetailedLogAtTraceTime = 999999
**.sim_controller.LOG_LVL = 0
**.sim_controller.RES_LVL = 0
**.sim_controller.DEBUG_LVL = 0	

