C++ version used by Omnet
//////////////////////////
echo "-std=c++20" >> configure.user

echo "-std=c++20" >> $OMNET_DIR/configure.user

to use the fmt package (e.g., #include <fmt/core.h>): apt-get innstall -y libfmt-dev

Omnet Make:
///////////////////////////
c; opp_makemake -u cmdenv -f -deep; make
where -u Cmdenv dismisses the GUI
The resulting exe file may be written to /out/clang-release. Also, make may gengerate in the current dir an additional exe, which is merely a hard-link to the .exe file in /out/clang-release.
The -deep flag means: search for source files also in all sub-dirs.

Omnet Run:
///////////////////////////
c; Distributed_SFC_migration.exe -f omnetpp.ini -u Cmdenv

When running with Cmdenv, one should change in omnetpp.ini to:
[General]
cmdenv-config-name = Dummy
Run, while including sub-dirs:
c; Distributed_SFC_migration.exe -u Cmdenv -f & C:/omnetpp-5.7/ofanan/Distributed_SFC_migration/omnetpp.ini 

Git:
///////////////////////////
git push -f https://github.com/ofanan/Distributed_SFC_migration.git HEAD:master

In Paolo's server:
///////////////////////////
./configure WITH_TKENV=no WITH_QTEVN=no WITH_OSG=no

Push to Paolo's server:
scp c:/omnetpp-5.7/ofanan/CmdenvChecker/*.ini itamar@130.192.9.117:/home/itamar/omnetpp-5.7/CmdenvChecker

Pull from Paolo's server:
scp itamar@130.192.9.117:/home/itamar/omnetpp-5.7/CmdenvChecker/CmdenvChecker c:/omnetpp-5.7/ofanan/CmdenvChecker/

Compiling in Paolo's server:
c; opp_makemake -u cmdenv -f -deep; make
c; ./CmdenvChecker -u Cmdenv -f omnetpp.ini

Building container
///////////////////
First, have to build (and locally check) a docker container.
When this works, convert the docker container to a singularity container.

Docker
///////////////////
docker build . -t omnetpp-5.6.2 
docker build . -t omnetpp-5.6.2-gui 
docker login
docker tag omnetpp-5.6.2 ofanan/omnetpp-5.6.2
docker push ofanan/omnetpp-5.6.2
docker push ofanan/omnetpp-5.6.2-w-gui:latest
docker run -it ofanan/omnetpp-5.6.2
// -i: interactively. -t: terminal
For getting a shell, may have to run:
docker run -it ofanan/omnetpp-5.6.2 /bin/sh

docker run --rm -it ofanan/omnetpp-5.6.2 /bin/sh # --rm deletes the container upon exiting it

find container's id:
docker ps
Run a command within a running container:
docker exec <container-id> cat /data.txt

docker stop <container-id>

To solve annoying "perl" problem within singularity shell:
LANG = C

scp /containers/omnetpp-5.6.2.img icohen@legionlogin.polito.it:/home/icohen/dist_SFC_migration

sudo singularity run -B /home/ofanan/omnetpp-5.6.2/ofanan/Distributed_SFC_migration/ omnetpp-5.6.2.img 
    
Cleaning unused images
docker image prune // remove ALL currently not-running containers.
Or...
docker images
docker rmi -f <docker_id>

SINGULARITY
////////////////////////
Need to use exactly the same version as in the cloud. Polito's HPC uses singularity-3.2.1.
Need to run singularity using my own user (NOT ROOT), but by using sudo (when called locally; not on the cloud).

Given my docker image ofanan/omnetpp-5.6.2 found in dockerHub, the command to generate singularity from it is:
sudo singularity build omnetpp-5.6.2.img docker://ofanan/omnetpp-5.6.2

To build from a .def (".recipe") file:
sudo singularity build omnet-5.6.2.img my_def_file.def 

Can check the container by:
sudo singularity shell omnetpp.img 

For binding a directory (may be helpful if calling sinularity as root), use 
> singularity shell -B /home/ofanan omnetpp.img 


